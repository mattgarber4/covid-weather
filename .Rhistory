TMAX = mean(TMAX, na.rm = T),
TMIN = mean(TMIN, na.rm = T))
weather <- group_by(weather, ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL)
View(weather)
weather <- fread("2020-weather.csv",
col.names = c("ID", "DATE", "TYPE", "VAL"),
drop = 5:8,
nThread = 4)
weather <- weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ] $>$
group_by(ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL)
weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ]
weather <- weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ] %>%
group_by(ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL)
hist(weather$TAVG - (weather$TMAX + weather$TMIN) / 2)
max(weather$TAVG - (weather$TMAX + weather$TMIN) / 2)
min(weather$TAVG - (weather$TMAX + weather$TMIN) / 2)
min(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
max(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
max(na.omit(weather$TMIN))
install.packages('weathermetrics')
library(weathermetrics)
mutate(weather, PRCP = PRCP * 10)
weather
weather <- mutate(weather,
PRCP = PRCP / 10,
TMAX = celsius.to.fahrenheit(TMAX / 10),
TMIN = celsius.to.fahrenheit(TMIN / 10),
TAVG = celsius.to.fahrenheit(TAVG / 10))
View(weather)
weather <- fread("2020-weather.csv",
col.names = c("ID", "DATE", "TYPE", "VAL"),
drop = 5:8,
nThread = 4)
weather <- weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ] %>%
group_by(ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL) #%>%
weather2 <- mutate(weather,
PRCP = PRCP / 10,
TMAX = celsius.to.fahrenheit(TMAX / 10),
TMIN = celsius.to.fahrenheit(TMIN / 10),
TAVG = celsius.to.fahrenheit(TAVG / 10))
View(weather)
uniqueID(weather[, c("ID", "DATE")])
weather <- mutate(weather,
PRCP = PRCP / 10,
TMAX = celsius.to.fahrenheit(TMAX / 10),
TMIN = celsius.to.fahrenheit(TMIN / 10),
TAVG = celsius.to.fahrenheit(TAVG / 10))
max(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
max(na.omit(weather$TMIN))
hist(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
# remove clear outliers
inRange <- function(vec, min, max) {
vec <= min & vec >= max
}
# remove clear outliers
inRange <- function(vec, min, max) {
(vec <= min & vec >= max) | is.na(vec)
}
weather2 <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
# remove clear outliers
inRange <- function(vec, min, max) {
(vec <= min & vec >= max) | is.na(vec)
}
weather2 <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
NA | T
sum(inRange(weather$TAVG, -25, 125))
# remove clear outliers
inRange <- function(vec, min, max) {
(vec >= min & vec <= max) | is.na(vec)
}
# remove clear outliers
inRange <- function(vec, min, max) {
(min <= vec & vec <= max) | is.na(vec)
}
weather2 <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
weather <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
hist(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
max(na.omit(weather$TMIN))
max(na.omit(weather$TMAX))
summary(weather)
stations <- fread("stations-subset-with-counties.csv")
head(stations)
gsub(" County$", "", stations$county)
stations$county <- gsub(" County$", "", stations$county)
head(weather)
head(stations)
weather$ID <- toupper(trimws(weather$ID))
stations$ID <- toupper(trimws(stations$ID))
state.abb
match(1:4, c(2, 1))
match(1:4, c(3, 1))
table(stations$state2)
stateAbbToName <- function(s) {
names.vec <- c(state.name, "District of Columbia")
abb.vec <- c(state.abb, "DC")
abb.vec[match(s, names.vec)]
}
stateAbbToName(c("New York", "District of Columbia", NA, "Wyoming"))
stateNameToAbb <- function(s) {
names.vec <- c(state.name, "District of Columbia")
abb.vec <- c(state.abb, "DC")
abb.vec[match(s, names.vec)]
}
sum(stations$STATE != stateNameToAbb(stations$state2))
stations <- stations[stations$STATE == stateNameToAbb(stations$state2), ]
sum(stations$county == 'error')
weather.merged <- merge(weather,
stations[,c("ID", "county", "state2")],
by = "ID", all = F)
weather.merged <- merge(weather,
stations[,c("ID", "county", "STATE")],
by = "ID", all = F)
head(weather.merged)
colnames(weather.merged) <- toupper(colnames(weather.merged))
head(weather.merged)
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
max = mean(na.omit(TAVG)),
min = mean(na.omit(MIN)),
prcp = mean(na.omit(PRCP)),
num = length(na.omit(TAVG))
)
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
TMAX = mean(na.omit(TMAX)),
NMAX = length(na.omit(TMAX)),
TMIN = mean(na.omit(MIN)),
NMIN = length(na.omit(TMIN)),
PRCP = mean(na.omit(PRCP)),
NPRCP = length(na.omit(PRCP)),
NUM = n()
)
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
TMAX = mean(na.omit(TMAX)),
NMAX = length(na.omit(TMAX)),
TMIN = mean(na.omit(TMIN)),
NMIN = length(na.omit(TMIN)),
PRCP = mean(na.omit(PRCP)),
NPRCP = length(na.omit(PRCP)),
NUM = n()
)
View(weather.aggregated)
idx <- weather.aggregated$COUNTY == 'Alameda' & weather.aggregated$STATE == 'CA'
plot(weather.aggregated$TAVG, weather.aggregated$DATE[idx])
plot(weather.aggregated$TMAX, weather.aggregated$DATE[idx])
plot(weather.aggregated$TMAX[idx], weather.aggregated$DATE[idx])
plot(weather.aggregated$DATE[idx], weather.aggregated$TMAX[idx])
table(weather.aggregated$DATE)
as.Date(weather.aggregated, 'YYYYMMDD')
as.Date(weather.aggregated, format = 'YYYYMMDD')
as.Date(weather.aggregated$DATE, format = 'YYYYMMDD')
as.Date(as.character(weather.aggregated$DATE), format = 'YYYYMMDD')
as.Date(as.character(weather.aggregated$DATE), format = 'yyyymmdd')
as.Date(as.character(weather.aggregated$DATE), format = '%Y%m%d')
setwd("~/Covid")
library(myUtils)
library(data.table)
library(dplyr)
library(tidyr)
library(weathermetrics)
covid <- fread('us-counties-covid.csv')
weather <- fread("2020-weather.csv",
col.names = c("ID", "DATE", "TYPE", "VAL"),
drop = 5:8,
nThread = 4)
stations <- fread("stations-subset-with-counties.csv")
stations$county <- gsub(" County$", "", stations$county)
weather <- weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ] %>%
group_by(ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL) %>%
mutate(PRCP = PRCP / 10,
TMAX = celsius.to.fahrenheit(TMAX / 10),
TMIN = celsius.to.fahrenheit(TMIN / 10),
TAVG = celsius.to.fahrenheit(TAVG / 10),
DATE = as.Date(as.character(DATE), format = "%Y%m%d"))
# remove clear outliers
inRange <- function(vec, min, max) {
(min <= vec & vec <= max) | is.na(vec)
}
weather <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
# temperatures are lining up well with the reported averages :)
hist(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
summary(weather)
weather$ID <- toupper(trimws(weather$ID))
stations$ID <- toupper(trimws(stations$ID))
stateNameToAbb <- function(s) {
names.vec <- c(state.name, "District of Columbia")
abb.vec <- c(state.abb, "DC")
abb.vec[match(s, names.vec)]
}
sum(stations$STATE != stateNameToAbb(stations$state2))
stations <- stations[stations$STATE == stateNameToAbb(stations$state2), ]
weather.merged <- merge(weather,
stations[,c("ID", "county", "STATE")],
by = "ID", all = F)
colnames(weather.merged) <- toupper(colnames(weather.merged))
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
TMAX = mean(na.omit(TMAX)),
NMAX = length(na.omit(TMAX)),
TMIN = mean(na.omit(TMIN)),
NMIN = length(na.omit(TMIN)),
PRCP = mean(na.omit(PRCP)),
NPRCP = length(na.omit(PRCP)),
NUM = n()
)
idx <- weather.aggregated$COUNTY == 'Alameda' & weather.aggregated$STATE == 'CA'
plot(weather.aggregated$DATE[idx], weather.aggregated$TMAX[idx])
# sanity checks
idx <- weather.aggregated$COUNTY == 'Nassau' & weather.aggregated$STATE == 'NY'
plot(weather.aggregated$DATE[idx], weather.aggregated$TMAX[idx])
# aggregate by county
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
TMAX = mean(na.omit(TMAX)),
NMAX = length(na.omit(TMAX)),
TMIN = mean(na.omit(TMIN)),
NMIN = length(na.omit(TMIN)),
TAVG = mean(na.omit(TAVG)),
NAVG = length(na.omit(TAVG)),
PRCP = mean(na.omit(PRCP)),
NPRCP = length(na.omit(PRCP)),
NUM = n()
)
# sanity checks
idx <- weather.aggregated$COUNTY == 'Philadelphia' & weather.aggregated$STATE == 'PA'
plot(weather.aggregated$DATE[idx], weather.aggregated$TMAX[idx])
plot(weather.aggregated$DATE[idx], weather.aggregated$TAVG[idx])
# sanity checks
idx <- weather.aggregated$COUNTY == 'Nassau' & weather.aggregated$STATE == 'NY'
plot(weather.aggregated$DATE[idx], weather.aggregated$TAVG[idx])
plot(weather.aggregated$DATE[idx], weather.aggregated$TMIN[idx])
# sanity checks
idx <- weather.aggregated$COUNTY == 'Nassau' & weather.aggregated$STATE == 'NY'
plot(weather.aggregated$DATE[idx], weather.aggregated$TMIN[idx])
# sanity checks
idx <- weather.aggregated$COUNTY == 'Bacon' & weather.aggregated$STATE == 'GA'
plot(weather.aggregated$DATE[idx], weather.aggregated$TMIN[idx])
plot(weather.aggregated$DATE[idx], weather.aggregated$TMAX[idx])
summary(weather.aggregated)
# sanity checks
idx <- weather.aggregated$COUNTY == 'King' & weather.aggregated$STATE == 'WA'
plot(weather.aggregated$DATE[idx], weather.aggregated$PRCP[idx])
test <- merge(data.frame(date=unique(weather.aggregated$DATE)), data.frame(county = unique(covid$county)), all = T)
View(test)
seq('2020-01-01', '2020-09-27', by = 1)
seq(as.Date('2020-01-01'), as.Date('2020-09-27'), by = 1)
length(seq(as.Date('2020-01-01'), as.Date('2020-09-27'), by = 1))
length(unique(covid$county))
271 * 1924
# create full dataset
merge(unique(weather.aggregated$DATE), unique(covid$county), all = T)
covid[!duplicated(covid[, c("county", 'state')]), c("county", "state")]
colnames(covid) <- toupper(colnames(covid))
head(covid)
merge(unique(weather.aggregated$DATE),
covid[!duplicated(covid[, c("county", 'state')]), c("county", "state")],
all = T)
merge(unique(weather.aggregated$DATE),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T)
covid$STATE <- stateNameToAbb(covid$STATE)
merge(unique(weather.aggregated$DATE),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T)
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
uniqueID(out[, c("STATE", "COUNTY", "DATE")])
sum(duplicated(out[, c("STATE", "COUNTY", "DATE")]))
d1 <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T)
uniqueID(d1[, c("DATE", "COUNTY", "STATE")])
uniqueID(covid[, c("DATE", "COUNTY", "STATE")])
View(covid)
uniqueID(covid[, c("FIPS", "DATE")])
covid <- fread('us-counties-covid.csv')
colnames(covid) <- toupper(colnames(covid))
uniqueID(covid[, c("DATE", "COUNTY", "STATE")])
covid$STATE <- stateNameToAbb(covid$STATE)
sum(is.na(covid$STATE))
covid <- fread('us-counties-covid.csv')
sum(is.na(covid$STATE))
covid$STATE2 <- stateNameToAbb(covid$STATE)
View(covid[is.na(covid$STATE2), ])
stateNameToAbb("Washington")
covid$STATE2 <- stateNameToAbb(covid$state)
View(covid[is.na(covid$STATE2), ])
covid <- fread('us-counties-covid.csv')
colnames(covid) <- toupper(colnames(covid))
covid$STATE <- stateNameToAbb(covid$STATE)
covid <- covid[!is.na(covid$STATE), ]
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
uniqueID(out[, c("DATE", "COUNTY", "STATE")])
View(out)
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid[, -which(colnames(covid) == "FIPS")],
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
covid[, -which(colnames(covid) == "FIPS")
covid[, -which(colnames(covid) == "FIPS")]
covid[, -which(colnames(covid) == "FIPS")]
covid[, -4]
which(colnames(covid) == "FIPS")
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid[, colnames(covid) != "FIPS"],
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
covid <- fread('us-counties-covid.csv')
colnames(covid) <- toupper(colnames(covid))
covid$STATE <- stateNameToAbb(covid$STATE)
covid <- covid[!is.na(covid$STATE), ]
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid[, colnames(covid) != "FIPS"],
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
covid[, colnames(covid) != "FIPS"]
covid[, colnames(covid) != "FIPS"]
View(covid)
# create full dataset
covid <- fread('us-counties-covid.csv', drop = "FIPS")
# create full dataset
covid <- fread('us-counties-covid.csv', drop = "fips")
colnames(covid) <- toupper(colnames(covid))
covid$STATE <- stateNameToAbb(covid$STATE)
covid <- covid[!is.na(covid$STATE), ]
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid[, colnames(covid) != "FIPS"],
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
View(out)
out$CASES[is.na(out$CASES)] <- 0
out$DEATHS[is.na(out$DEATHS)] <- 0
summary(out)
write.csv(out, file = "covid-weather-merged.csv")
write.csv(out, file = "covid-weather-merged.csv", row.names = F)
setwd("~/Covid")
library(myUtils)
library(data.table)
library(dplyr)
library(tidyr)
library(weathermetrics)
### STATIONS
stations <- fread("stations-subset-with-counties.csv")
stations$county <- gsub(" County$", "", stations$county)
stateNameToAbb <- function(s) {
names.vec <- c(state.name, "District of Columbia")
abb.vec <- c(state.abb, "DC")
abb.vec[match(s, names.vec)]
}
sum(stations$STATE != stateNameToAbb(stations$state2))
stations <- stations[stations$STATE == stateNameToAbb(stations$state2), ]
### WEATHER
weather <- fread("2020-weather.csv",
col.names = c("ID", "DATE", "TYPE", "VAL"),
drop = 5:8,
nThread = 4)
weather <- weather[weather$TYPE %in% c("PRCP", "TAVG", "TMIN", "TMAX"), ] %>%
group_by(ID, DATE, TYPE) %>%
summarize(VAL = mean(VAL, na.rm = T)) %>%
ungroup() %>%
spread(key = TYPE, value = VAL) %>%
mutate(PRCP = .0393701 * PRCP / 10,
TMAX = celsius.to.fahrenheit(TMAX / 10),
TMIN = celsius.to.fahrenheit(TMIN / 10),
TAVG = celsius.to.fahrenheit(TAVG / 10),
DATE = as.Date(as.character(DATE), format = "%Y%m%d")
)
# remove clear outliers
inRange <- function(vec, min, max) {
(min <= vec & vec <= max) | is.na(vec)
}
weather <- weather[inRange(weather$TAVG, -25, 125) &
inRange(weather$TMIN, -25, 125) &
inRange(weather$TMAX, -25, 125), ]
# temperatures are lining up well with the reported averages :)
hist(na.omit(weather$TAVG - (weather$TMAX + weather$TMIN) / 2))
summary(weather)
# conduct the merge
weather$ID <- toupper(trimws(weather$ID))
stations$ID <- toupper(trimws(stations$ID))
weather.merged <- merge(weather,
stations[,c("ID", "county", "STATE")],
by = "ID", all = F)
colnames(weather.merged) <- toupper(colnames(weather.merged))
# aggregate by county
weather.aggregated <- weather.merged %>%
group_by(DATE, COUNTY, STATE) %>%
summarize(
TMAX = mean(na.omit(TMAX)),
NMAX = length(na.omit(TMAX)),
TMIN = mean(na.omit(TMIN)),
NMIN = length(na.omit(TMIN)),
TAVG = mean(na.omit(TAVG)),
NAVG = length(na.omit(TAVG)),
PRCP = mean(na.omit(PRCP)),
NPRCP = length(na.omit(PRCP)),
NUM = n()
)
# sanity checks
idx <- weather.aggregated$COUNTY == 'King' & weather.aggregated$STATE == 'WA'
plot(weather.aggregated$DATE[idx], weather.aggregated$PRCP[idx])
summary(weather.aggregated)
# create full dataset
covid <- fread('us-counties-covid.csv', drop = "fips")
colnames(covid) <- toupper(colnames(covid))
covid$STATE <- stateNameToAbb(covid$STATE)
covid <- covid[!is.na(covid$STATE), ]
out <- merge(data.frame(DATE = unique(weather.aggregated$DATE)),
covid[!duplicated(covid[, c("COUNTY", "STATE")]), c("COUNTY", "STATE")],
all = T) %>%
merge(covid,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F) %>%
merge(weather.aggregated,
by = c("DATE", "COUNTY", "STATE"),
all.x = T,
all.y = F)
out$CASES[is.na(out$CASES)] <- 0
out$DEATHS[is.na(out$DEATHS)] <- 0
uniqueID(out[, c("DATE", "COUNTY", "STATE")])
summary(out)
write.csv(out, file = "covid-weather-merged.csv", row.names = F)
